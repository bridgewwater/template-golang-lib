# this is a workflow must add
# - variables `ENV_DOCKERHUB_OWNER` user of docker hub
# - variables `ENV_DOCKERHUB_REPO_NAME` repo name of docker hub
# - secrets `DOCKERHUB_TOKEN` token of docker hub user from [hub.docker](https://hub.docker.com/settings/security)
# most use as github.event.pull_request.merged == true

name: docker-image-latest

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-docker-image-latest
  # cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}
  cancel-in-progress: false

on:
  workflow_call: # https://docs.github.com/actions/using-workflows/reusing-workflows#using-inputs-and-secrets-in-a-reusable-workflow
    inputs:
      push_remote_flag:
        description: 'flag for push to remote'
        default: false
        required: false
        type: boolean
      build_branch_name:
        description: 'name of branch for build default is main'
        default: 'main'
        required: false
        type: string
    secrets:
      DOCKERHUB_TOKEN:
        description: 'docker hub token'
        required: false

env:
  DOCKER_IMAGE_PLATFORMS: linux/amd64,linux/arm64/v8 # change to your platforms for release
  # DOCKER_IMAGE_PLATFORMS: linux/amd64,linux/386,linux/arm64/v8,linux/arm/v7

jobs:
  docker-image-buildx:
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        docker_image: # change this for build dry-run
          - platform: linux/amd64
          # - platform: linux/386
          - platform: linux/arm64/v8
          # - platform: linux/arm/v7
    runs-on: ${{ matrix.os }}
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ vars.ENV_DOCKERHUB_OWNER }}/${{ vars.ENV_DOCKERHUB_REPO_NAME }}
          tags: |
            # set latest tag for main branch https://github.com/docker/metadata-action#latest-tag
            type=raw,value=latest,enable=true
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container # `docker-container` is default
      -
        name: Build dry
        uses: docker/build-push-action@v5 # https://github.com/marketplace/actions/build-and-push-docker-images
        with:
          context: .
          file: Dockerfile
          platforms: ${{ matrix.docker_image.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.meta.outputs.tags }}
          no-cache: false
          provenance: false
          pull: true
          push: false

  docker-image-push:
    runs-on: ubuntu-latest
    needs:
      - docker-image-buildx
    if: ${{ inputs.push_remote_flag }}
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ vars.ENV_DOCKERHUB_OWNER }}/${{ vars.ENV_DOCKERHUB_REPO_NAME }}
          tags: |
            # type semver https://github.com/docker/metadata-action#typesemver
            type=raw,value=latest,enable=true
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.ENV_DOCKERHUB_OWNER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container # `docker-container` is default
      -
        name: Build and push
        id: docker_push
        uses: docker/build-push-action@v5 # https://github.com/marketplace/actions/build-and-push-docker-images
        with:
          context: .
          file: Dockerfile
          platforms: ${{ env.DOCKER_IMAGE_PLATFORMS }}
          labels: ${{ steps.meta.outputs.labels }}
          tags: ${{ steps.meta.outputs.tags }}
          no-cache: true
          provenance: false
          sbom: false
          pull: true
          push: true
